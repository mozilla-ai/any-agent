{
  "spans": [
    {
      "name": "call_llm gpt-4.1-mini",
      "kind": "internal",
      "parent": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 14176559052673891084,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 1502931851602936953,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 13243360651667472328,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
<<<<<<< HEAD
<<<<<<< HEAD
      "start_time": 1751443051425708702,
      "end_time": null,
=======
      "start_time": 1751364653445924472,
      "end_time": 1751364654228570792,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
      "start_time": 1751542106621158984,
      "end_time": 1751542107341378518,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      "status": {
        "status_code": "ok",
        "description": null
      },
      "context": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 7401084151160764393,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 4383976391702940115,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 8855947853991935931,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
      "attributes": {
        "gen_ai.operation.name": "call_llm",
        "gen_ai.request.model": "gpt-4.1-mini",
        "gen_ai.input.messages": "[{\"role\": \"system\", \"content\": \"Use the available tools to answer.\\n\\nYour final answer must be a Steps object.\\n            This object must match the following schema:\\n            {'$defs': {'Step': {'properties': {'number': {'title': 'Number', 'type': 'integer'}, 'description': {'title': 'Description', 'type': 'string'}}, 'required': ['number', 'description'], 'title': 'Step', 'type': 'object'}}, 'additionalProperties': False, 'properties': {'steps': {'items': {'$ref': '#/$defs/Step'}, 'title': 'Steps', 'type': 'array'}}, 'required': ['steps'], 'title': 'Steps', 'type': 'object'}\\n            \"}, {\"role\": \"user\", \"content\": \"New task:\\nFind what year it is in the America/New_York timezone and write the value (single number) to a file. Finally, return a list of the steps you have taken.\"}]",
        "gen_ai.output": "[{\"tool.name\": \"get_current_time\", \"tool.args\": \"{\\\"timezone\\\":\\\"America/New_York\\\"}\"}]",
        "gen_ai.output.type": "json",
        "gen_ai.usage.input_tokens": 349,
        "gen_ai.usage.output_tokens": 18
      },
      "links": [],
      "events": [],
      "resource": {
        "attributes": {
          "telemetry.sdk.language": "python",
          "telemetry.sdk.name": "opentelemetry",
          "telemetry.sdk.version": "1.34.1",
          "service.name": "unknown_service"
        },
        "schema_url": ""
      }
    },
    {
      "name": "execute_tool get_current_time",
      "kind": "internal",
      "parent": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 14176559052673891084,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 1502931851602936953,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 13243360651667472328,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
<<<<<<< HEAD
<<<<<<< HEAD
      "start_time": 1751443052253738889,
      "end_time": null,
=======
      "start_time": 1751364654234462243,
      "end_time": 1751364654237198519,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
      "start_time": 1751542107347214671,
      "end_time": 1751542107350314475,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      "status": {
        "status_code": "ok",
        "description": null
      },
      "context": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 12449577879593703980,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 15230022775889126479,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 2160100859338981047,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
      "attributes": {
        "gen_ai.operation.name": "execute_tool",
        "gen_ai.tool.name": "get_current_time",
        "gen_ai.tool.description": "Get current time in a specific timezones",
        "gen_ai.tool.args": "{\"timezone\": \"America/New_York\"}",
<<<<<<< HEAD
<<<<<<< HEAD
        "gen_ai.output": "{\n  \"timezone\": \"America/New_York\",\n  \"datetime\": \"2025-07-02T03:57:32-04:00\",\n  \"is_dst\": true\n}",
=======
        "gen_ai.output": "{\n  \"timezone\": \"America/New_York\",\n  \"datetime\": \"2025-07-01T06:10:54-04:00\",\n  \"is_dst\": true\n}",
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "gen_ai.output": "{\n  \"timezone\": \"America/New_York\",\n  \"datetime\": \"2025-07-03T07:28:27-04:00\",\n  \"is_dst\": true\n}",
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "gen_ai.output.type": "json"
      },
      "links": [],
      "events": [],
      "resource": {
        "attributes": {
          "telemetry.sdk.language": "python",
          "telemetry.sdk.name": "opentelemetry",
          "telemetry.sdk.version": "1.34.1",
          "service.name": "unknown_service"
        },
        "schema_url": ""
      }
    },
    {
      "name": "call_llm gpt-4.1-mini",
      "kind": "internal",
      "parent": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 14176559052673891084,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 1502931851602936953,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 13243360651667472328,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
<<<<<<< HEAD
<<<<<<< HEAD
      "start_time": 1751443052261236515,
      "end_time": null,
=======
      "start_time": 1751364654238736550,
      "end_time": 1751364654796295418,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
      "start_time": 1751542107351922692,
      "end_time": 1751542107938558999,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      "status": {
        "status_code": "ok",
        "description": null
      },
      "context": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 5327317046132617521,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 5941275341248100030,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 16172285086884643477,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
      "attributes": {
        "gen_ai.operation.name": "call_llm",
        "gen_ai.request.model": "gpt-4.1-mini",
        "gen_ai.output": "[{\"tool.name\": \"write_file\", \"tool.args\": \"{\\\"text\\\":\\\"2025\\\"}\"}]",
        "gen_ai.output.type": "json",
<<<<<<< HEAD
        "gen_ai.usage.input_tokens": 477,
=======
        "gen_ai.usage.input_tokens": 476,
<<<<<<< HEAD
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
        "gen_ai.usage.output_tokens": 15,
        "gen_ai.response.model": "gpt-4.1-mini-2025-04-14"
=======
        "gen_ai.usage.output_tokens": 15
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      },
      "links": [],
      "events": [],
      "resource": {
        "attributes": {
          "telemetry.sdk.language": "python",
          "telemetry.sdk.name": "opentelemetry",
          "telemetry.sdk.version": "1.34.1",
          "service.name": "unknown_service"
        },
        "schema_url": ""
      }
    },
    {
      "name": "execute_tool write_file",
      "kind": "internal",
      "parent": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 14176559052673891084,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 1502931851602936953,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 13243360651667472328,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
<<<<<<< HEAD
<<<<<<< HEAD
      "start_time": 1751443052975745376,
      "end_time": null,
=======
      "start_time": 1751364654798955282,
      "end_time": 1751364654799121112,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
      "start_time": 1751542107942667972,
      "end_time": 1751542107943006653,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      "status": {
        "status_code": "ok",
        "description": null
      },
      "context": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 18243463079930832994,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 4058279007806711581,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 7790251630145319743,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
      "attributes": {
        "gen_ai.operation.name": "execute_tool",
        "gen_ai.tool.name": "write_file",
        "gen_ai.tool.description": "write the text to a file in the tmp_path directory",
        "gen_ai.tool.args": "{\"text\": \"2025\"}",
        "gen_ai.output": "{}",
        "gen_ai.output.type": "json"
      },
      "links": [],
      "events": [],
      "resource": {
        "attributes": {
          "telemetry.sdk.language": "python",
          "telemetry.sdk.name": "opentelemetry",
          "telemetry.sdk.version": "1.34.1",
          "service.name": "unknown_service"
        },
        "schema_url": ""
      }
    },
    {
      "name": "call_llm gpt-4.1-mini",
      "kind": "internal",
      "parent": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 14176559052673891084,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 1502931851602936953,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 13243360651667472328,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
<<<<<<< HEAD
<<<<<<< HEAD
      "start_time": 1751443052977345113,
      "end_time": null,
=======
      "start_time": 1751364654800490786,
      "end_time": 1751364659697711159,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
      "start_time": 1751542107944916502,
      "end_time": 1751542111696016053,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      "status": {
        "status_code": "ok",
        "description": null
      },
      "context": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 7546452229846411357,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 9624517957378806585,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 5740743464051413660,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
      "attributes": {
        "gen_ai.operation.name": "call_llm",
        "gen_ai.request.model": "gpt-4.1-mini",
<<<<<<< HEAD
<<<<<<< HEAD
        "gen_ai.output": "[{\"tool.name\": \"final_answer\", \"tool.args\": \"{\\\"answer\\\":\\\"{\\\\\\\"steps\\\\\\\":[{\\\\\\\"number\\\\\\\":1,\\\\\\\"description\\\\\\\":\\\\\\\"Get the current time in the America/New_York timezone.\\\\\\\"},{\\\\\\\"number\\\\\\\":2,\\\\\\\"description\\\\\\\":\\\\\\\"Extract the year from the current time, which is 2025.\\\\\\\"},{\\\\\\\"number\\\\\\\":3,\\\\\\\"description\\\\\\\":\\\\\\\"Write the year 2025 to a file.\\\\\\\"}] }\\\"}\"}]",
        "gen_ai.output.type": "json",
        "gen_ai.usage.input_tokens": 560,
=======
        "gen_ai.output": "[{\"tool.name\": \"final_answer\", \"tool.args\": \"{\\\"answer\\\":\\\"{\\\\\\\"steps\\\\\\\":[{\\\\\\\"number\\\\\\\":1,\\\\\\\"description\\\\\\\":\\\\\\\"Get the current date and time in the America/New_York timezone.\\\\\\\"},{\\\\\\\"number\\\\\\\":2,\\\\\\\"description\\\\\\\":\\\\\\\"Extract the year from the current date and time.\\\\\\\"},{\\\\\\\"number\\\\\\\":3,\\\\\\\"description\\\\\\\":\\\\\\\"Write the extracted year (2025) to a file.\\\\\\\"}] }\\\"}\"}]",
        "gen_ai.output.type": "json",
        "gen_ai.usage.input_tokens": 559,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
        "gen_ai.usage.output_tokens": 78,
        "gen_ai.response.model": "gpt-4.1-mini-2025-04-14"
=======
        "gen_ai.output": "[{\"tool.name\": \"final_answer\", \"tool.args\": \"{\\\"answer\\\":\\\"{\\\\\\\"steps\\\\\\\":[{\\\\\\\"number\\\\\\\":1,\\\\\\\"description\\\\\\\":\\\\\\\"Get the current time in the America/New_York timezone.\\\\\\\"},{\\\\\\\"number\\\\\\\":2,\\\\\\\"description\\\\\\\":\\\\\\\"Extract the year from the current time, which is 2025.\\\\\\\"},{\\\\\\\"number\\\\\\\":3,\\\\\\\"description\\\\\\\":\\\\\\\"Write the year 2025 to a file.\\\\\\\"}] }\\\"}\"}]",
        "gen_ai.output.type": "json",
        "gen_ai.usage.input_tokens": 558,
        "gen_ai.usage.output_tokens": 78
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      },
      "links": [],
      "events": [],
      "resource": {
        "attributes": {
          "telemetry.sdk.language": "python",
          "telemetry.sdk.name": "opentelemetry",
          "telemetry.sdk.version": "1.34.1",
          "service.name": "unknown_service"
        },
        "schema_url": ""
      }
    },
    {
      "name": "execute_tool final_answer",
      "kind": "internal",
      "parent": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 14176559052673891084,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 1502931851602936953,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 13243360651667472328,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
<<<<<<< HEAD
<<<<<<< HEAD
      "start_time": 1751443054531717557,
      "end_time": null,
=======
      "start_time": 1751364659703060260,
      "end_time": 1751364659703233465,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
      "start_time": 1751542111699355591,
      "end_time": 1751542111699474218,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      "status": {
        "status_code": "ok",
        "description": null
      },
      "context": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 3005827101407658242,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 8135265067564465728,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 16179451246116183432,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
      "attributes": {
        "gen_ai.operation.name": "execute_tool",
        "gen_ai.tool.name": "final_answer",
        "gen_ai.tool.description": "Provides a final answer to the given problem.",
<<<<<<< HEAD
<<<<<<< HEAD
        "gen_ai.tool.args": "{\"answer\": \"{\\\"steps\\\":[{\\\"number\\\":1,\\\"description\\\":\\\"Get the current time in the America/New_York timezone.\\\"},{\\\"number\\\":2,\\\"description\\\":\\\"Extract the year from the current time, which is 2025.\\\"},{\\\"number\\\":3,\\\"description\\\":\\\"Write the year 2025 to a file.\\\"}] }\"}",
        "gen_ai.output": "{\"steps\":[{\"number\":1,\"description\":\"Get the current time in the America/New_York timezone.\"},{\"number\":2,\"description\":\"Extract the year from the current time, which is 2025.\"},{\"number\":3,\"description\":\"Write the year 2025 to a file.\"}] }",
=======
        "gen_ai.tool.args": "{\"answer\": \"{\\\"steps\\\":[{\\\"number\\\":1,\\\"description\\\":\\\"Get the current date and time in the America/New_York timezone.\\\"},{\\\"number\\\":2,\\\"description\\\":\\\"Extract the year from the current date and time.\\\"},{\\\"number\\\":3,\\\"description\\\":\\\"Write the extracted year (2025) to a file.\\\"}] }\"}",
        "gen_ai.output": "{\"steps\":[{\"number\":1,\"description\":\"Get the current date and time in the America/New_York timezone.\"},{\"number\":2,\"description\":\"Extract the year from the current date and time.\"},{\"number\":3,\"description\":\"Write the extracted year (2025) to a file.\"}] }",
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "gen_ai.tool.args": "{\"answer\": \"{\\\"steps\\\":[{\\\"number\\\":1,\\\"description\\\":\\\"Get the current time in the America/New_York timezone.\\\"},{\\\"number\\\":2,\\\"description\\\":\\\"Extract the year from the current time, which is 2025.\\\"},{\\\"number\\\":3,\\\"description\\\":\\\"Write the year 2025 to a file.\\\"}] }\"}",
        "gen_ai.output": "{\"steps\":[{\"number\":1,\"description\":\"Get the current time in the America/New_York timezone.\"},{\"number\":2,\"description\":\"Extract the year from the current time, which is 2025.\"},{\"number\":3,\"description\":\"Write the year 2025 to a file.\"}] }",
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "gen_ai.output.type": "json"
      },
      "links": [],
      "events": [],
      "resource": {
        "attributes": {
          "telemetry.sdk.language": "python",
          "telemetry.sdk.name": "opentelemetry",
          "telemetry.sdk.version": "1.34.1",
          "service.name": "unknown_service"
        },
        "schema_url": ""
      }
    },
    {
      "name": "invoke_agent [any_agent]",
      "kind": "internal",
      "parent": {
        "trace_id": null,
        "span_id": null,
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
<<<<<<< HEAD
<<<<<<< HEAD
      "start_time": 1751443051425087705,
      "end_time": 1751443054534461950,
=======
      "start_time": 1751364653445372223,
      "end_time": 1751364659709266576,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
      "start_time": 1751542106620372445,
      "end_time": 1751542111702280220,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      "status": {
        "status_code": "unset",
        "description": null
      },
      "context": {
<<<<<<< HEAD
<<<<<<< HEAD
        "trace_id": 177623499119612249058708773420001031947,
        "span_id": 14176559052673891084,
=======
        "trace_id": 7012176121051759975358851040719253491,
        "span_id": 1502931851602936953,
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "trace_id": 300080504377736933169696286390932436893,
        "span_id": 13243360651667472328,
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
        "is_remote": false,
        "trace_flags": {
          "value": 0
        },
        "trace_state": {
          "entries": {}
        }
      },
      "attributes": {
        "gen_ai.operation.name": "invoke_agent",
        "gen_ai.agent.name": "any_agent",
        "gen_ai.agent.description": "No description.",
        "gen_ai.request.model": "gpt-4.1-mini"
      },
      "links": [],
      "events": [],
      "resource": {
        "attributes": {
          "telemetry.sdk.language": "python",
          "telemetry.sdk.name": "opentelemetry",
          "telemetry.sdk.version": "1.34.1",
          "service.name": "unknown_service"
        },
        "schema_url": ""
      }
    }
  ],
  "final_output": {
    "steps": [
      {
        "number": 1,
<<<<<<< HEAD
<<<<<<< HEAD
        "description": "Get the current time in the America/New_York timezone."
      },
      {
        "number": 2,
        "description": "Extract the year from the current time, which is 2025."
      },
      {
        "number": 3,
        "description": "Write the year 2025 to a file."
=======
        "description": "Get the current date and time in the America/New_York timezone."
=======
        "description": "Get the current time in the America/New_York timezone."
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      },
      {
        "number": 2,
        "description": "Extract the year from the current time, which is 2025."
      },
      {
        "number": 3,
<<<<<<< HEAD
        "description": "Write the extracted year (2025) to a file."
>>>>>>> ca8cc62 (feat: Introduce `any_agent/callbacks`.)
=======
        "description": "Write the year 2025 to a file."
>>>>>>> 9adcd0e (Add _SpanGeneration base class)
      }
    ]
  }
}
