name: Tests

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'docs/**'
  pull_request:
    paths:
      - 'src/**'
      - 'tests/**'
      - 'docs/**'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      docs_only: ${{ steps.docs_only.outputs.docs_only }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Detect docs-only changes
        id: docs_only
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -v '^docs/' | grep -q .; then
            echo "docs_only=false" >> $GITHUB_OUTPUT
          else
            echo "docs_only=true" >> $GITHUB_OUTPUT
          fi

  docs:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Setup Python and Dependencies
        uses: ./.github/actions/setup-python
        with:
          dependency-groups: 'tests'
          extras: 'all'
      - name: Run Documentation tests
        run: pytest -v tests/docs

  unit:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.docs_only == 'false'
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Setup Python and Dependencies
        uses: ./.github/actions/setup-python
        with:
          dependency-groups: 'tests'
          extras: 'all'
      - name: Run Unit tests
        run: pytest -v tests/unit

  snapshot:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.docs_only == 'false'
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Setup Python and Dependencies
        uses: ./.github/actions/setup-python
        with:
          dependency-groups: 'tests'
          extras: 'all'
      - name: Run Snapshot tests
        run: pytest -v tests/snapshots

  integration:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.docs_only == 'false' && (github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch')
    env:
      ANY_AGENT_INTEGRATION_TESTS: TRUE
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
      - name: Setup Python and Dependencies
        uses: ./.github/actions/setup-python
        with:
          dependency-groups: 'tests'
          extras: 'all'
      - name: Run Integration tests (parallel with xdist)
        run: pytest -v tests/integration -d --tx '4*popen//python=python'
